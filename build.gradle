plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'org.sonarqube' version '6.0.1.5171'
}

group = 'com.rbittencourt'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

sourceSets {
	integrationTest {
		java.srcDirs = ['src/it/java']
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
	uiTest {
		java.srcDirs = ['src/ui-test']
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.seleniumhq.selenium:selenium-java:4.27.0'
	testImplementation 'io.github.bonigarcia:webdrivermanager:5.9.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
	uiTestImplementation.extendsFrom testImplementation
	uiTestRuntimeOnly.extendsFrom testRuntimeOnly
}

sonar {
	properties {
		property("sonar.host.url", "http://sonar:9000")
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy integrationTest, jacocoTestReport
}

tasks.register('integrationTest', Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	executionData integrationTest
	dependsOn test, integrationTest
	reports {
		xml.required = true
	}
}